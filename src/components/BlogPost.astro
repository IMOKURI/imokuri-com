---
import { render } from "astro:content"
import type { CollectionEntry } from "astro:content"

export interface Props {
  post: CollectionEntry<"blog">
}

const { post } = Astro.props

const { remarkPluginFrontmatter } = await render(post)
---

<a
  href={`/blog/${post.data.date.getFullYear()}/${(post.data.date.getMonth() + 1)
    .toString()
    .padStart(2, "0")}/${post.id}/`}
>
  <div class="card card-border hover:shadow-2xl shadow-lg hover:scale-[101%] my-10 bg-base-100/80 z-20">
    <div class="card-body">
      <h2 class="card-title mb-2">{post.data.title}</h2>
      <p class="text-sm mb-1">
        <i class="fa-regular fa-file-lines"></i>
        Posted on {post.data.date.toLocaleDateString()}
      </p>
      {
        post.data.updated && post.data.updated > post.data.date ? (
          <p class="text-sm mb-1">
            <i class="fa-solid fa-file-lines" />
            Updated on {post.data.updated.toLocaleDateString()}
          </p>
        ) : null
      }
      <div class="text-sm mb-1">
        <i class="fa-solid fa-align-left"></i>
        {remarkPluginFrontmatter.words}
        {remarkPluginFrontmatter.words === 1 ? "word" : "words"},
        <i class="fa-regular fa-clock"></i>
        {remarkPluginFrontmatter.minutes}
        {remarkPluginFrontmatter.minutes === 1 ? "minute" : "minutes"} to read
      </div>
      {
        post.data.tags ? (
          <div class="inline mb-1">
            {post.data.tags.map(tag => (
              <a href={`/tag/${tag}`}>
                <div class="badge badge-accent badge-soft mr-2">{tag}</div>
              </a>
            ))}
          </div>
        ) : null
      }
      <p>{post.data.description}</p>
    </div>
  </div>
</a>
